@model PaginatedList<FastBurger.Models.Lanche>

@{
    ViewData["Title"] = "Produtos";
}

<h1>Produtos</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Adicionar Produto</a>
</p>
<hr />

<form method="get" asp-action="Index" class="form-inline">
    <div class="form-actions no-color">
        <input type="text" name="SearchString" class="form-control col-md" placeholder="Pesquise um Produto" value="@ViewData["CurrentFilter"]" />
        <br />
        <input type="submit" value="Pesquisar" class="btn btn-outline-primary" />
    </div>
</form>

<br />

<strong>Total de Produtos: </strong> @Model?.Count()

<table class="table">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Preço
            </th>
            <th>
                Preferido
            </th>
            <th>
                Estoque
            </th>
            <th>
                Categoria
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LancheNome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Preco)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsLanchePreferido)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmEstoque)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Categoria.CategoriaNome)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.LancheId">Editar</a>
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.LancheId">Detalhes</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.LancheId">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Proxima
</a>